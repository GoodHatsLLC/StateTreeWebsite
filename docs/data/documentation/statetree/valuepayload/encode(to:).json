{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Encodable.encode(to:)"},{"type":"text","text":"."}],"metadata":{"modules":[{"name":"StateTree"}],"role":"symbol","externalID":"s:9StateTree12ValuePayloadO6encode2toys7Encoder_p_tKF","roleHeading":"Instance Method","title":"encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/StateTree\/documentation\/StateTree","doc:\/\/StateTree\/documentation\/StateTree\/ValuePayload"]]},"sections":[],"identifier":{"url":"doc:\/\/StateTree\/documentation\/StateTree\/ValuePayload\/encode(to:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"encoder","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/statetree\/valuepayload\/encode(to:)"]}],"references":{"doc://StateTree/documentation/StateTree/ValuePayload/encode(to:)":{"type":"topic","url":"\/documentation\/statetree\/valuepayload\/encode(to:)","abstract":[],"identifier":"doc:\/\/StateTree\/documentation\/StateTree\/ValuePayload\/encode(to:)","role":"symbol","title":"encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol"},"doc://StateTree/documentation/StateTree/ValuePayload":{"identifier":"doc:\/\/StateTree\/documentation\/StateTree\/ValuePayload","navigatorTitle":[{"text":"ValuePayload","kind":"identifier"}],"kind":"symbol","title":"ValuePayload","url":"\/documentation\/statetree\/valuepayload","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValuePayload","kind":"identifier"}],"abstract":[{"text":"Value types arenâ€™t known at decoding time, so we store them as encoded strings","type":"text"},{"text":" ","type":"text"},{"text":"and use that string for comparison and hashing.","type":"text"}],"role":"symbol"},"doc://StateTree/documentation/StateTree":{"url":"\/documentation\/statetree","kind":"symbol","type":"topic","role":"collection","title":"StateTree","identifier":"doc:\/\/StateTree\/documentation\/StateTree","abstract":[]}}}